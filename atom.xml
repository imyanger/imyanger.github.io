<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杨小格子的小窝</title>
  
  <subtitle>也曾梦想仗剑走天涯，后来bug太多没去成</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://imyanger.github.io/"/>
  <updated>2020-11-24T15:45:36.754Z</updated>
  <id>https://imyanger.github.io/</id>
  
  <author>
    <name>imyanger</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>进程</title>
    <link href="https://imyanger.github.io/2020/11/24/wltx-jc/"/>
    <id>https://imyanger.github.io/2020/11/24/wltx-jc/</id>
    <published>2020-11-24T15:44:33.000Z</published>
    <updated>2020-11-24T15:45:36.754Z</updated>
    
    <content type="html"><![CDATA[<h3 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h3><h4 id="进程的概念"><a href="#进程的概念" class="headerlink" title="进程的概念"></a>进程的概念</h4><p>进程是一个具有独立功能的程序关于某个数据集合的一次运行活动。它可以申请和拥有系统资源，是一个动态的概念，是一个活动的主体，不只是程序的代码本身，还包括当前的活动，通过程序计数器的值和处理寄存器的内容来表示。</p><p>一个进程实体由程序段、相关数据段和PCB三部分组成，其中PCB是标志一个进程存在的唯一标识，程序段是进程运行的程序的代码，数据段则存储程序运行过程中相关的一些信息。</p><p>进程把能够识别程序运行状态的一些变量存放在PCB之中，通过这些变量系统能够更好地了解进程的状况，并在适当的时候进行进程的切换，以避免一些资源的浪费，甚至划分为更小的调度单位<strong>线程</strong>来提高系统的并发度。</p><h4 id="进程的特性"><a href="#进程的特性" class="headerlink" title="进程的特性"></a>进程的特性</h4><ol><li>动态性：进程是程序的一次执行，他有着创建、活动、暂停、终止等过程，具有一定的生命周期，是动态地产生、变化和消亡的。动态性是进程最基本的特性。</li><li>并发性：指多个进程实体，同存于内存中，能在一段时间内同时运行，并发性是进程的重要特征，同时也是操作系统的重要特征。引入进程的目的就是为了使程序能与其他进程的程序并发执行，以提高资源利用率。</li><li>独立性：指进程实体是一个能独立运行、独立获得资源和独立接受调度的基本单位。凡未建立PCB的程序都不能作为一个独立的单位参与运行。</li><li>异步性：由于进程的相互制约，使程序具有执行的间断性，即进程按各自独立的、不可预知的速度向前推进。异步性会导致执行结果的不可再现性，位次，在操作系统中必须配置相应的进程同步机制。</li><li>结构性：每个进程都配置一个PCB对其进行描述。从结构上看，进程实体是由程序段、数据段和进程控制段三部分组成的。</li></ol><h4 id="进程间通信"><a href="#进程间通信" class="headerlink" title="进程间通信"></a>进程间通信</h4><p>进程（Linux）间的通信方式有管道、消息队列、共享内存、信号量、Socket。</p><ul><li><p>管道</p><p>管道，英文为pipe。这是一个我们在学习Linux命令行的时候就会引入的一个很重要的概念。它的发明人是道格拉斯.麦克罗伊，这位也是UNIX上早期shell的发明人。他在发明了shell之后，发现系统操作执行命令的时候，经常有需求要将一个程序的输出交给另一个程序进行处理，也因此，管道应运而生了。</p><p>管道可以分为两类：匿名管道和命名管道。</p><p>常见的Linux命令 “|” 其实就是匿名管道，表示把一个进程的输出传输到另外一个进程，如：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo "Happyjava" | awk -F 'j' '&#123;print $2&#125;'</span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出 ava</span></span><br></pre></td></tr></table></figure><p>另外，我们可以通过 mkfifo <pipename> 命令创建一个命名管道，如：</pipename></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfifo pipe</span><br></pre></td></tr></table></figure><p>一个进程往管道输入数据，会阻塞等待别的进程从管道读取数据。</p></li><li><p>消息队列</p><p>此消息队列不是我们常用的MQ，如kafka，rabbitmq，rocketmq等。</p><p>消息队列提供了一种从一个进程向另一个进程发送一个数据块的方法。 每个数据块都被认为含有一个类型，接收进程可以独立地接收含有不同类型的数据结构。我们可以通过发送消息来避免命名管道的同步和阻塞问题。但是消息队列与命名管道一样，每个数据块都有一个最大长度的限制。</p><p>使用消息队列进行进程间通信，可能会收到数据块最大长度的限制约束等，这也是这种通信方式的缺点。如果频繁的发生进程间的通信行为，那么进程需要频繁地读取队列中的数据到内存，相当于间接地从一个进程拷贝到另一个进程，这需要花费时间。</p></li><li><p>共享内存</p><p>共享内存这个通信方式就可以很好的解决了拷贝所消耗的时间。系统加载一个进程的时候，分配给进程的内存并不是实际物理内存，而是虚拟内存空间。那么我们可以让两个进程各自拿出一块虚拟地址空间来，然后映射到相同的物理内存中，这样，两个进程虽然有着独立的虚拟内存空间，但有一部分却是映射到相同的物理内存，这就完成了内存共享机制了。</p></li><li><p>信号量</p><p>共享内存最大的问题就是多进程竞争内存的问题，就像类似于我们平时说的线程安全问题，这个时候我们的信号量就上场了。</p><p>信号量的本质就是一个计数器，用来实现进程之间的互斥与同步。例如信号量的初始值是 1，然后 a 进程来访问内存1的时候，我们就把信号量的值设为 0，然后进程b 也要来访问内存1的时候，看到信号量的值为 0 就知道已经有进程在访问内存1了，这个时候进程 b 就会访问不了内存1。所以说，信号量也是进程之间的一种通信方式。</p></li><li><p>Socket</p><p> Socket套接字也是进程间的通信机制，与其它通信机制不同的是，它可以用于不同机器间的进程通信。如我们的微信APP跟微信服务器通信，其实就是使用的Socket套接字进行通信的。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;进程&quot;&gt;&lt;a href=&quot;#进程&quot; class=&quot;headerlink&quot; title=&quot;进程&quot;&gt;&lt;/a&gt;进程&lt;/h3&gt;&lt;h4 id=&quot;进程的概念&quot;&gt;&lt;a href=&quot;#进程的概念&quot; class=&quot;headerlink&quot; title=&quot;进程的概念&quot;&gt;&lt;/a&gt;进程的概
      
    
    </summary>
    
      <category term="网络通信" scheme="https://imyanger.github.io/categories/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/"/>
    
    
      <category term="网络通信" scheme="https://imyanger.github.io/tags/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1/"/>
    
      <category term="进程" scheme="https://imyanger.github.io/tags/%E8%BF%9B%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>博客文章汇总</title>
    <link href="https://imyanger.github.io/2020/08/08/bolg/"/>
    <id>https://imyanger.github.io/2020/08/08/bolg/</id>
    <published>2020-08-08T00:08:08.000Z</published>
    <updated>2020-11-24T15:39:39.722Z</updated>
    
    <content type="html"><![CDATA[<p>关于我的所有博文，欢迎阅读。</p><blockquote><p>一个放荡不羁爱自由的小码农！</p></blockquote><h3 id="JavaSE-基础部分"><a href="#JavaSE-基础部分" class="headerlink" title="JavaSE 基础部分"></a>JavaSE 基础部分</h3><h3 id="JavaEE-web部分"><a href="#JavaEE-web部分" class="headerlink" title="JavaEE web部分"></a>JavaEE web部分</h3><h3 id="SpringBoot系列"><a href="#SpringBoot系列" class="headerlink" title="SpringBoot系列"></a>SpringBoot系列</h3><ul><li><h5 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h5><ul><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/91357757" target="_blank" rel="noopener">快速开始Spring Boot</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/91409786" target="_blank" rel="noopener">Spring Boot配置文件与常用注解</a></li></ul></li><li><h5 id="Spring-Boot便捷开发"><a href="#Spring-Boot便捷开发" class="headerlink" title="Spring Boot便捷开发"></a>Spring Boot便捷开发</h5><ul><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/93544230" target="_blank" rel="noopener">文档支持，Spring Boot集成Swagger2</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/95106785" target="_blank" rel="noopener">热部署工具，Spring Boot集成devtools</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/95244402" target="_blank" rel="noopener">简化代码，Spring Boot使用lombok</a></li></ul></li><li><h5 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h5><ul><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/96370376" target="_blank" rel="noopener">Spring Boot集成jdbcTemplate</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/96626629" target="_blank" rel="noopener">Spring Boot集成Spring Data JPA</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/96652099" target="_blank" rel="noopener">Spring Boot集成MyBatis，基于注解sql方式</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/96693951" target="_blank" rel="noopener">Spring Boot集成MyBatis，xml配置文件方式</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/100110489" target="_blank" rel="noopener">Spring Boot事务管理器，声明式注解</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/100128710" target="_blank" rel="noopener">Spring Boot集成redis</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/100422819" target="_blank" rel="noopener">Spring Boot多数据源，jdbcTemplate方式</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/100855234" target="_blank" rel="noopener">Spring Boot多数据源，JPA方式</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/100866116" target="_blank" rel="noopener">Spring Boot多数据源，Mybatis方式</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/100939458" target="_blank" rel="noopener">Spring Boot多数据源，Mybatis动态数据源方式</a></li></ul></li><li><h5 id="视图模板引擎"><a href="#视图模板引擎" class="headerlink" title="视图模板引擎"></a>视图模板引擎</h5><ul><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/102536243" target="_blank" rel="noopener">Spring Boot使用模板引擎JSP</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/102536223" target="_blank" rel="noopener">Spring Boot使用模板引擎Thymeleaf</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/102536205" target="_blank" rel="noopener">Spring Boot使用模板引擎FreeMarker</a></li></ul></li><li><h5 id="异步处理"><a href="#异步处理" class="headerlink" title="异步处理"></a>异步处理</h5><ul><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/88090261" target="_blank" rel="noopener">SpringBoot集成RabbitMq示例讲解</a></li></ul></li></ul><h3 id="SpringCloud系列"><a href="#SpringCloud系列" class="headerlink" title="SpringCloud系列"></a>SpringCloud系列</h3><ul><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/87902645" target="_blank" rel="noopener">SpringCloud系列：1.认识SpringCloud</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/87907177" target="_blank" rel="noopener">SpringCloud系列：2.Spring Boot项目搭建</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/87909781" target="_blank" rel="noopener">SpringCloud系列：3.服务的注册与发现Eureka</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/87909896" target="_blank" rel="noopener">SpringCloud系列：4.负载均衡Ribbon及断路器Hystrix</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/89162580" target="_blank" rel="noopener">SpringCloud系列：5.微服务间调用Feign</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/89296741" target="_blank" rel="noopener">SpringCloud系列：6.微服务网关服务Zuul</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/89439962" target="_blank" rel="noopener">SpringCloud系列：7.微服务统一配置中心Config</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/90050647" target="_blank" rel="noopener">SpringCloud系列：8.微服务消息总栈Bus</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/90141540" target="_blank" rel="noopener">SpringCloud系列：9.微服务服务链路追踪Sleuth</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/90247460" target="_blank" rel="noopener">SpringCloud系列：10.Spring Cloud Sleuth与Spring Cloud Bus冲突问题</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/90349982" target="_blank" rel="noopener">SpringCloud系列：11.高可用注册中心Eurake</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/90681733" target="_blank" rel="noopener">SpringCloud系列：12.微服务断路器监控系统Hystrix Dashboard</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/90814949" target="_blank" rel="noopener">SpringCloud系列：13.微服务断路器聚合监控系统Hystrix Turbine</a></li></ul><h3 id="Java并发系列"><a href="#Java并发系列" class="headerlink" title="Java并发系列"></a>Java并发系列</h3><h3 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h3><h3 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h3><ul><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/90343095" target="_blank" rel="noopener">简化代码：lombok插件的使用</a></li><li><a href="https://blog.csdn.net/Simple_Yangger/article/details/102472372" target="_blank" rel="noopener">markdown + 七牛云，让写文更容易</a></li></ul><h3 id="Java源码解析"><a href="#Java源码解析" class="headerlink" title="Java源码解析"></a>Java源码解析</h3><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;关于我的所有博文，欢迎阅读。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一个放荡不羁爱自由的小码农！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;JavaSE-基础部分&quot;&gt;&lt;a href=&quot;#JavaSE-基础部分&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="汇总" scheme="https://imyanger.github.io/categories/%E6%B1%87%E6%80%BB/"/>
    
    
      <category term="java" scheme="https://imyanger.github.io/tags/java/"/>
    
      <category term="spring" scheme="https://imyanger.github.io/tags/spring/"/>
    
      <category term="mysql" scheme="https://imyanger.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>hexo 博客搭建</title>
    <link href="https://imyanger.github.io/2018/11/24/hexo/"/>
    <id>https://imyanger.github.io/2018/11/24/hexo/</id>
    <published>2018-11-24T15:22:54.000Z</published>
    <updated>2020-11-24T15:29:08.194Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="init-hexo-project"><a href="#init-hexo-project" class="headerlink" title="init hexo project"></a>init hexo project</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init  //在本地生成hexo模板</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;init-hexo-project&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="hexo" scheme="https://imyanger.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://imyanger.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
